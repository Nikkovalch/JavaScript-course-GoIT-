// Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º

// // –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª —Ç–∞ ¬´Blues¬ª.
// const genres = ["Jazz", "Blues"];
// // –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
// genres.push("–†–æ–∫-–Ω-—Ä–æ–ª")
// // –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// console.log(genres[0]);
// // –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
// console.log(genres[genres.length - 1]);
// // –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// console.log(genres.splice(0, 1));
// // –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.
// genres.splice(0, 0, "Country", "Reggae")
// console.log(genres);
// =========================================================

// Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
// –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
// –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.

// const values = '8 11';
// const split = values.split(" ")
// const result = split[0] * split[1]

// console.log(`–ü–ª–æ—â–∞ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ - ${result}`);
// ================================================

// Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for.
// –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
// —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.
// –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// function sort(arr){
//   for(let i = 0, num = 1; i < arr.length; num += 1, i += 1){
//     console.log(`${num} - ${arr[i]}`);
//   }
// }

// sort(fruits);
// ================================================

// Example 4 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ü–∏–∫–ª–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
// –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
// —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏.
// –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å.
// –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.

// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377';

// function contacts(names, phones) {
//   names = names.split(",")
//   phones = phones.split(",")
//   let result = []

//   for(let i = 0; i < names.length; i += 1){
//     if(!!names[i] === !!phones[i]) {
//       result.push(`${names[i]} - ${phones[i]}`.split(","));
//     }
//   }

//   return result
// }

// console.log(contacts(names, phones));
//=================================================================

// Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ.
// –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É.
// –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.

// const string = 'Welcome to the future';

// function startAndEndDel(str) {
//   str = str.split(" ");

//   if(str.length >= 3) {
//     str.shift();
//     str.pop();
//   }

//   str = str.join(" ");

//   return str
// }

// console.log(startAndEndDel(string));
// ==============================================================

// Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤)
// —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.

// const string = 'Welcome to the future';

// function reverse(rev) {
//   rev = rev.split(" ");
//   rev.reverse()

//   let result = rev.join(" ")

//   return result
// }

// console.log(reverse(string));
// ==============================================================
// Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —ñ–∑ —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
// –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é –µ–ª–µ–º–µ–Ω—Ç–∞.

// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];
// // const numbers = [15, 327, 73, 24, 5, 166];
// const numbers = [2, 17, 94, 1, 23, 37];
// const alfabet = ["e","c","a","b","d","f"];

// let num = numbers[0]

// for(let i = 0; i < numbers.length; i += 1){
//   if(num > numbers[i]) {
//     num = numbers[i]
//   }

// }

// console.log(num);
// ================================================

// Example 7 - –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ —ç–ª–µ–º–µ–Ω—Ç–∞.

// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];

// const alfabet = ["e", "c", "a", "b", "d", "f"];

// // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±–º—ñ–Ω—É –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
// function swap(arr, i, j) {
//     const temp = arr[i];
//     arr[i] = arr[j];
//     arr[j] = temp;
// }

// // –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –±—É–ª—å–±–∞—à–∫–æ—é
// function bubbleSort(arr) {
//     const len = arr.length;
//     for (let i = 0; i < len - 1; i++) {
//         for (let j = 0; j < len - 1 - i; j++) {
//             if (arr[j] > arr[j + 1]) {
//                 swap(arr, j, j + 1);
//             }
//         }
//     }
// }

// // –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
// bubbleSort(alfabet);

// // –†–µ–∑—É–ª—å—Ç–∞—Ç
// console.log(alfabet);

// let count = 0;

// function cc(card) {
//   // –ó–º—ñ–Ω—ñ—Ç—å –∫–æ–¥ –ª–∏—à–µ –ø—ñ–¥ —Ü–∏–º —Ä—è–¥–∫–æ–º
//   switch (card) {
//     case 2:
//     case 3:
//     case 4:
//     case 5:
//     case 6:
//       count += 1;
//       break;
//     case 7:
//     case 8:
//     case 9:
//       count += 0;
//       break;
//     case 10:
//     case "J":
//     case "Q":
//     case "K":
//     case "A":
//       count += -1;
//       break;
//   }
//   if (count > 0) {
//     return `${count} Bet`;
//   }
//   return `${count} Hold`;
// }


// function cc(card) {
//   // –ó–º—ñ–Ω—ñ—Ç—å –∫–æ–¥ –ª–∏—à–µ –ø—ñ–¥ —Ü–∏–º —Ä—è–¥–∫–æ–º
//   if (card >= 2 && card <= 6) {
//     count += 1;
//   } else if (card >= 7 && card <= 9) {
//     count += 0;
//   } else if (card >= 10 || Boolean(card)) {
//     count += -1;
//   }

//   if (count > 0) {
//     return `${count} Bet`;
//   }
//   return `${count} Hold`;
// }


// console.log(cc('d'));
// ===========================================

// let mas=[11, 5, 8, 9, 1, 3, 2, 10, 12, 13];
// let str=["a", "c", "d", "b"];
// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];

// // for(let i = 0, tmt; i < mas.length - 1; i += 1) {
// //     for(let j = 0; j < mas.length - 1; j += 1) {
// //         if(mas[j] > mas[j + 1]) {
// //             tmt = mas[j]
// //             mas[j] = mas[j + 1]
// //             mas[j + 1] = tmt
// //         }
// //     }
// // }
// ======FUNCTION========================
// function sort(mas) {
//     for(let i = 0, tmt; i < mas.length - 1; i += 1) {
//         for(let j = 0; j < mas.length - 1; j += 1) {
//             if(mas[j] > mas[j + 1]) {
//                 tmt = mas[j]
//                 mas[j] = mas[j + 1]
//                 mas[j + 1] = tmt
//             }
//         }
//     }
//     return mas
// }

// console.log(sort(str));
// console.log(sort(langs));
//==============================================